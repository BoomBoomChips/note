abstract class Action 
{
	public static final int EAT=1;
	public static final int SLEEP=5;
	public static final int WORK=7;
	public void command(int flag){
		switch (flag)
		{
		case EAT:
			this.eat();
		break;
		case SLEEP:
			this.sleep();
		break;
		case WORK:
			this.work();
		break;
		case EAT+WORK:
			this.eat();
			this.work();
		break;

		}
	}
	//因为现在不确定子类的实现是什么样的
	public abstract void eat();
	public abstract void work();
	public abstract void work();
}
	//机器人类
class Robot exatends Action
{
	public void eat(){
		System.out.println("机器人吃饭");
	}
	public void work(){
		System.out.println("机器人工作");
	}
	public void sleep(){}
}
//人类
class Human extends Action
{
	public void eat(){
		System.out.println("人在吃饭");
	}
	public void work(){
		System.out.println("人在工作");
	}
	public void sleep(){
		System.out.println("人在睡觉");
	}
}
//猪类
class Pig extends Action
{
	public void eat(){
		System.out.println("猪在吃饭");
	}
	public void work(){
	}
	public void sleep(){
		System.out.println("猪在睡觉");
	}
}
public class Hello
{
	public static void main(String args[]){
		fun(new Robot());
		fun(new Human());
		fun(new Pig());
	}
	public static void fun(Action act){
		act.command(Action.EAT);
		act.command(Action.SLEEP);
		act.command(Action.WORK);

	}

}